#!/usr/bin/env python3
import sys
import os

# Adicionar o diret√≥rio atual ao path para importar postgre
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

try:
    from postgre import create_pg_connection, end_pg_connection
    
    def inserir_estados():
        conn = create_pg_connection()
        if not conn:
            print("‚ùå Erro na conex√£o com o banco")
            return False
            
        cursor = conn.cursor()
        
        estados = [
            ('AC', 'Acre'),
            ('AL', 'Alagoas'),
            ('AP', 'Amap√°'),
            ('AM', 'Amazonas'),
            ('BA', 'Bahia'),
            ('CE', 'Cear√°'),
            ('DF', 'Distrito Federal'),
            ('ES', 'Esp√≠rito Santo'),
            ('GO', 'Goi√°s'),
            ('MA', 'Maranh√£o'),
            ('MT', 'Mato Grosso'),
            ('MS', 'Mato Grosso do Sul'),
            ('MG', 'Minas Gerais'),
            ('PA', 'Par√°'),
            ('PB', 'Para√≠ba'),
            ('PR', 'Paran√°'),
            ('PE', 'Pernambuco'),
            ('PI', 'Piau√≠'),
            ('RJ', 'Rio de Janeiro'),
            ('RN', 'Rio Grande do Norte'),
            ('RS', 'Rio Grande do Sul'),
            ('RO', 'Rond√¥nia'),
            ('RR', 'Roraima'),
            ('SC', 'Santa Catarina'),
            ('SP', 'S√£o Paulo'),
            ('SE', 'Sergipe'),
            ('TO', 'Tocantins')
        ]
        
        try:
            # Verificar estados existentes
            cursor.execute("SELECT sigla FROM estado")
            estados_existentes = {row[0] for row in cursor.fetchall()}
            
            print(f"üìä Estados j√° cadastrados: {len(estados_existentes)}")
            if estados_existentes:
                print(f"   Existentes: {sorted(estados_existentes)}")
            
            # Inserir apenas os estados que n√£o existem
            estados_inseridos = 0
            for sigla, nome in estados:
                if sigla not in estados_existentes:
                    cursor.execute(
                        "INSERT INTO estado (sigla, nome) VALUES (%s, %s)",
                        (sigla, nome)
                    )
                    estados_inseridos += 1
                    print(f"‚úÖ Inserido: {sigla} - {nome}")
            
            if estados_inseridos == 0:
                print("‚ÑπÔ∏è  Todos os estados j√° est√£o cadastrados!")
            else:
                conn.commit()
                print(f"\nüéâ {estados_inseridos} novos estados inseridos com sucesso!")
            
            # Verificar se PE foi inserido/existe
            cursor.execute("SELECT nome FROM estado WHERE sigla = 'PE'")
            pe_result = cursor.fetchone()
            if pe_result:
                print(f"‚úÖ PE (Pernambuco) est√° dispon√≠vel: {pe_result[0]}")
            else:
                print("‚ùå PE ainda n√£o est√° dispon√≠vel")
            
            # Mostrar total final
            cursor.execute("SELECT COUNT(*) FROM estado")
            total = cursor.fetchone()[0]
            print(f"üìà Total de estados no banco: {total}")
                
            return True
            
        except Exception as e:
            conn.rollback()
            print(f"‚ùå Erro ao inserir estados: {e}")
            return False
        finally:
            cursor.close()
            end_pg_connection(conn)
    
    if __name__ == "__main__":
        print("üèõÔ∏è  Inserindo estados brasileiros...")
        print("=" * 50)
        inserir_estados()
        print("=" * 50)
        
except ImportError as e:
    print(f"‚ùå Erro ao importar m√≥dulos: {e}")
    print("   Certifique-se de que o arquivo postgre.py est√° no mesmo diret√≥rio")
