#!/bin/bash

# HomeManager - Execut√°vel
# Este script inicia o servidor e abre o navegador

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

print_color() {
    printf "${1}${2}${NC}\n"
}

# Obter diret√≥rio do projeto
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$(dirname "$SCRIPT_DIR")")"

cd "$PROJECT_DIR"

# Verificar se ambiente virtual existe
if [ ! -d ".venv" ]; then
    print_color $RED "‚ùå Ambiente virtual n√£o encontrado!"
    print_color $YELLOW "Execute o instalador primeiro: ./installers/linux/install_homemanager.sh"
    exit 1
fi

# Fun√ß√£o para cleanup
cleanup() {
    print_color $YELLOW "\nüõë Encerrando HomeManager..."
    if [ ! -z "$SERVER_PID" ]; then
        kill $SERVER_PID 2>/dev/null
        wait $SERVER_PID 2>/dev/null
    fi
    print_color $GREEN "‚úÖ HomeManager encerrado com sucesso"
    exit 0
}

# Capturar sinais de interrup√ß√£o
trap cleanup SIGINT SIGTERM

# Ativar ambiente virtual
source .venv/bin/activate

# Verificar se PostgreSQL est√° acess√≠vel
print_color $BLUE "üîç Verificando conex√£o com PostgreSQL..."
if ! python3 -c "import psycopg2; from postgre import create_pg_connection; create_pg_connection()" 2>/dev/null; then
    print_color $RED "‚ùå Erro na conex√£o com PostgreSQL!"
    print_color $YELLOW "Verifique se:"
    print_color $YELLOW "  - PostgreSQL est√° instalado e rodando"
    print_color $YELLOW "  - Credenciais no arquivo .env est√£o corretas"
    print_color $YELLOW "  - Banco de dados 'db_elevadores' existe"
    exit 1
fi

print_color $GREEN "‚úÖ Conex√£o com PostgreSQL estabelecida"

# Cabe√ßalho
echo
echo "===================================================="
print_color $BLUE "üè¢ HomeManager - Sistema de Elevadores"
print_color $CYAN "üöÄ Iniciando aplica√ß√£o..."
echo "===================================================="

# Iniciar servidor em background
python3 app.py &
SERVER_PID=$!

# Aguardar servidor inicializar
sleep 3

# Verificar se servidor est√° rodando
if ! kill -0 $SERVER_PID 2>/dev/null; then
    print_color $RED "‚ùå Falha ao iniciar o servidor!"
    exit 1
fi

# Abrir navegador
print_color $GREEN "üåê Abrindo HomeManager no navegador..."
if command -v xdg-open >/dev/null 2>&1; then
    xdg-open "http://localhost:5000" >/dev/null 2>&1
elif command -v gnome-open >/dev/null 2>&1; then
    gnome-open "http://localhost:5000" >/dev/null 2>&1
elif command -v firefox >/dev/null 2>&1; then
    firefox "http://localhost:5000" >/dev/null 2>&1 &
elif command -v google-chrome >/dev/null 2>&1; then
    google-chrome "http://localhost:5000" >/dev/null 2>&1 &
else
    print_color $YELLOW "‚ö†Ô∏è  N√£o foi poss√≠vel abrir o navegador automaticamente"
    print_color $CYAN "Abra manualmente: http://localhost:5000"
fi

print_color $GREEN "‚úÖ HomeManager iniciado com sucesso!"
print_color $CYAN "üí° Feche esta janela ou pressione Ctrl+C para encerrar"

# Aguardar sinal de encerramento
wait $SERVER_PID
