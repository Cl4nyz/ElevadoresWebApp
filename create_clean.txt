-- Estrutura limpa das tabelas sem dados
BEGIN;

CREATE TABLE IF NOT EXISTS public.cliente
(
    id SERIAL PRIMARY KEY,
    nome character varying(100) NOT NULL,
    cpf character varying(11)
);

CREATE TABLE IF NOT EXISTS public.estado
(
    sigla character varying(2) NOT NULL,
    nome character varying(50) NOT NULL,
    PRIMARY KEY (sigla)
);

CREATE TABLE IF NOT EXISTS public.endereco
(
    id SERIAL PRIMARY KEY,
    id_cliente integer NOT NULL,
    rua character varying(50),
    numero integer,
    cidade character varying(50) NOT NULL,
    estado character varying(2) NOT NULL,
    complemento character varying(50),
    cep character varying(8)
);

CREATE TABLE IF NOT EXISTS public.contrato
(
    id SERIAL PRIMARY KEY,
    data_venda date,
    data_entrega date,
    id_cliente integer,
    vendedor character varying(20)
);

-- Nova estrutura de elevadores - Tabela principal
CREATE TABLE IF NOT EXISTS public.elevador
(
    id SERIAL NOT NULL,
    id_contrato integer,
    comando character varying(20),
    observacao character varying(100),
    porta_inferior character varying(10),
    porta_superior character varying(10),
    cor character varying(20),
    status character varying(20),
    PRIMARY KEY (id)
);

-- Tabela cabine (relacionada ao elevador)
CREATE TABLE IF NOT EXISTS public.cabine
(
    id_elevador integer NOT NULL,
    altura integer,
    largura integer,
    profundidade integer,
    piso character varying(10),
    montada boolean DEFAULT false,
    lado_entrada character varying(10),
    lado_saida character varying(10),
    PRIMARY KEY (id_elevador)
);

-- Tabela coluna (relacionada ao elevador)
CREATE TABLE IF NOT EXISTS public.coluna
(
    id_elevador integer NOT NULL,
    elevacao integer,
    montada boolean DEFAULT false,
    PRIMARY KEY (id_elevador)
);

-- Tabela adicionais (relacionada ao elevador)
CREATE TABLE IF NOT EXISTS public.adicionais
(
    id_elevador integer NOT NULL,
    cancela integer,
    porta integer,
    portao integer,
    barreira_eletronica integer,
    lados_enclausuramento integer,
    sensor_esmagamento integer,
    rampa_acesso integer,
    nobreak integer,
    galvanizada boolean DEFAULT false,
    PRIMARY KEY (id_elevador)
);

-- Foreign Keys
ALTER TABLE IF EXISTS public.endereco
    ADD FOREIGN KEY (id_cliente)
    REFERENCES public.cliente (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;

ALTER TABLE IF EXISTS public.endereco
    ADD FOREIGN KEY (estado)
    REFERENCES public.estado (sigla) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;

ALTER TABLE IF EXISTS public.contrato
    ADD FOREIGN KEY (id_cliente)
    REFERENCES public.cliente (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;

ALTER TABLE IF EXISTS public.elevador
    ADD FOREIGN KEY (id_contrato)
    REFERENCES public.contrato (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;

ALTER TABLE IF EXISTS public.cabine
    ADD FOREIGN KEY (id_elevador)
    REFERENCES public.elevador (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;

ALTER TABLE IF EXISTS public.coluna
    ADD FOREIGN KEY (id_elevador)
    REFERENCES public.elevador (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;

ALTER TABLE IF EXISTS public.adicionais
    ADD FOREIGN KEY (id_elevador)
    REFERENCES public.elevador (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;

END;
